{"version":3,"sources":["Components/Form/Form.js","Components/Finder/Finder.js","Components/FormItem/FormItem.js","Components/FormList/FormList.js","App.js","index.js","Components/Form/Form.module.css"],"names":["Form","onSubmitProp","useState","name","setName","number","setNumber","inputId","uuidv4","onSubmit","event","preventDefault","className","styles","form","htmlFor","form_item","type","value","id","onChange","currentTarget","pattern","title","required","button","Finder","FormItem","deleteItem","onClick","FormList","contacts","map","defContacts","App","filter","setFilter","JSON","parse","window","localStorage","getItem","setContacts","useEffect","setItem","stringify","isAlreadyInContacts","some","contact","item","alert","prevState","console","log","e","normalizedFilter","toLowerCase","includes","includingContacts","contactId","prevContacts","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e8177da9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Form.module.css\";\n\nconst Form = ({onSubmitProp}) => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\")\n  };\n    const onInputTelChange = (event) => {\n    setNumber( event.currentTarget.value );\n  };\n\n const  onInputChange = (event) => {\n    setName( event.currentTarget.value);\n };\n  \n    const onFormSubmit = (event) => {\n    event.preventDefault();\n    onSubmitProp(name, number);\n    reset();\n  };\n  \nconst inputId = uuidv4();\n  return (\n    <form onSubmit={onFormSubmit} className={styles.form}>\n         <label htmlFor={inputId} className={styles.form_item}>\n          Name:\n           <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            id={inputId}\n            onChange={onInputChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n\n        <label className={styles.form_item}>\n          Number:\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={onInputTelChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button type=\"submit\" className={styles.button}>\n          Add contact\n        </button>\n      </form>\n  )\n}\n\n\n// class Form extends Component {\n//   state = {\n//     name: \"\",\n//     number: \"\",\n//   };\n\n//   reset() {\n//     this.setState({ name: \"\", number: \"\" });\n//   }\n\n//   onInputChange = (event) => {\n//     this.setState({ name: event.currentTarget.value });\n//   };\n//   onInputTelChange = (event) => {\n//     this.setState({ number: event.currentTarget.value });\n//   };\n//   onFormSubmit = (event) => {\n//     event.preventDefault();\n//     this.props.onSubmitProp(this.state.name, this.state.number);\n//     this.reset();\n//   };\n\n//   render() {\n//     const inputId = uuidv4();\n//     return (\n//       <form onSubmit={this.onFormSubmit} className={styles.form}>\n//         <label htmlFor={inputId} className={styles.form_item}>\n//           Name:\n//           <input\n//             type=\"text\"\n//             name=\"name\"\n//             value={this.state.name}\n//             id={inputId}\n//             onChange={this.onInputChange}\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//             title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n//             required\n//           />\n//         </label>\n\n//         <label className={styles.form_item}>\n//           Number:\n//           <input\n//             type=\"tel\"\n//             name=\"number\"\n//             value={this.state.number}\n//             onChange={this.onInputTelChange}\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//             title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n//             required\n//           />\n//         </label>\n//         <button type=\"submit\" className={styles.button}>\n//           Add contact\n//         </button>\n//       </form>\n//     );\n//   }\n// }\nexport default Form;\nForm.propTypes = {\n  onSubmitProp: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst Finder = ({ value, onChange }) => {\n  return (\n    <>\n      <p>Find contacts by name</p>\n      <input type=\"text\" name=\"name\" value={value} onChange={onChange} />\n    </>\n  );\n};\n\nexport default Finder;\nFinder.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\n\nconst FormItem = ({ name, id, number, deleteItem }) => {\n  return (\n    <>\n      <li key={id}>\n        <p>\n          {name}: {number}\n        </p>\n      </li>\n      <button type=\"button\" onClick={deleteItem}>\n        Delete\n      </button>\n    </>\n  );\n};\nexport default FormItem;\nFormItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteItem: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormItem from \"../FormItem/FormItem\";\n\nconst FormList = ({ contacts, deleteItem }) => {\n  return (\n    <ul>\n      {contacts.map(({ name, id, number }) => (\n        <FormItem\n          name={name}\n          id={id}\n          number={number}\n          deleteItem={() => deleteItem(id)}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default FormList;\nFormList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  deleteItem: PropTypes.func.isRequired,\n};\n","import \"./App.css\";\n\nimport Form from \"./Components/Form/Form\";\nimport React, { useState, useEffect } from \"react\";\n// import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Finder from \"./Components/Finder/Finder\";\nimport FormList from \"./Components/FormList/FormList\";\n\nconst defContacts = [\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n];\n\nconst App = () => {\n  const [filter, setFilter] = useState(\"\");\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(\"contacts\")) ?? defContacts;\n  });\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const onSubmitHandler = (name, number) => {\n    const isAlreadyInContacts = contacts.some(\n      (contact) => contact.name === name\n    );\n    const item = {\n      name,\n      number,\n      id: uuidv4(),\n    };\n    if (isAlreadyInContacts) {\n      alert(\"вы что такое делаете\");\n      return;\n    }\n    setContacts((prevState) => [item, ...prevState]);\n    console.log(contacts);\n  };\n\n  const deleteItem = (contactId) => {\n    setContacts((prevContacts) =>\n      prevContacts.filter((contact) => contact.id !== contactId)\n    );\n  };\n\n  const onFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const includingContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <Form onSubmitProp={onSubmitHandler} />\n\n      <Finder value={filter} onChange={onFilter} />\n      <FormList contacts={includingContacts()} deleteItem={deleteItem} />\n    </div>\n  );\n};\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__P3Nmf\",\"form_item\":\"Form_form_item__3QUPK\",\"button\":\"Form_button__3eoJJ\"};"],"sourceRoot":""}